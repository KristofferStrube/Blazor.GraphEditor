﻿@using BlazorContextMenu
@using KristofferStrube.Blazor.SVGEditor.ShapeEditors
@using KristofferStrube.Blazor.SVGEditor.Extensions
@using KristofferStrube.Blazor.SVGEditor;
@using Microsoft.AspNetCore.Components.Web;
@inherits ShapeEditor<Node>

<ContextMenuTrigger MenuId="SVGMenu" WrapperTag="g" Data=@SVGElement MouseButtonTrigger="SVGElement.ShouldTriggerContextMenu ? MouseButtonTrigger.Right : (MouseButtonTrigger)4">
    <g transform="translate(@SVGElement.SVG.Translate.x.AsString() @SVGElement.SVG.Translate.y.AsString()) scale(@SVGElement.SVG.Scale.AsString())">
        <circle @ref=ElementReference
        @onfocusin="FocusElement"
        @onfocusout="UnfocusElement"
        @onpointerdown="SelectAsync"
        @onkeyup="KeyUp"
                tabindex="@(SVGElement.IsChildElement ? -1 : 0)"
                cx=@SVGElement.Cx.AsString()
                cy=@SVGElement.Cy.AsString()
                r=@SVGElement.R.AsString()
                stroke="@SVGElement.Stroke"
                stroke-width="@SVGElement.StrokeWidth"
                stroke-linecap="@SVGElement.StrokeLinecap.AsString()"
                stroke-linejoin="@SVGElement.StrokeLinejoin.AsString()"
                stroke-dasharray="@SVGElement.StrokeDasharray"
                stroke-dashoffset="@SVGElement.StrokeDashoffset.AsString()"
                fill="@SVGElement.Fill"
                style="filter:brightness(@(SVGElement.Selected ? "0.8" : "1"))">
        </circle>
    </g>
</ContextMenuTrigger>

@code {
    public new async Task SelectAsync(MouseEventArgs eventArgs)
    {
        if (SVGElement.SVG.EditMode is EditMode.Add && SVGElement.SVG.SelectedShapes.Any(s => s is Edge))
        {
            SVGElement.SVG.SelectedShapes.Add(SVGElement);
        }
        else
        {
            await base.SelectAsync(eventArgs);
        }
    }
}